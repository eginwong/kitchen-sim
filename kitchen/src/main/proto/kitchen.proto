syntax = "proto3";

package com.eginwong.kitchensim;

// The waiter service definition.
service Waiter {
  // Orders a single meal, direct from the cook, and sends food immediately when ready
  rpc StaffOrder (SingleOrder) returns (Meal) {}

  // Orders several meals, and returns all ordered meals at one time
  rpc WesternHostOrder (stream SingleOrder) returns (BatchMeals) {}

  // Orders all food for the meal at once but sends back food as it becomes available
  rpc EasternHostOrder (MealRequest) returns (stream Meal) {}

  // Orders food continuously and the kitchen returns food continuously
  rpc DimSumOrder (stream MealRequest) returns (stream BatchMeals) {}
}

// The request message containing the meal id.
message SingleOrder {
  int32 mealId = 1;
}

// The request message containing several meal ids.
message MealRequest {
  repeated int32 mealIds = 1;
}

// The response message containing multiple meals.
message BatchMeals {
  repeated Meal meals = 1;
}

// The entity of work from the kitchen.
message Meal {
  int32 id = 1;
  string name = 2; 
  repeated string ingredients = 3;
  int32 servingTime = 4;
  double price = 5;
}

// Not used in RPC, but for bootstrapping purposes
message MealsDatabase {
  repeated Meal meals = 1;
}