syntax = "proto3";

package com.eginwong.kitchensim;

// The order service definition.
service Waiter {
  // Orders meals and waits until all food is ready before sending it out of the kitchen
  rpc InstantOrder (MealRequest) returns (MealResponse) {}
  
  // Orders several meals while on tab, similar to bar where patrons add drinks throughout the meal
  rpc OnTabOrder (stream MealRequest) returns (MealResponse) {}

  // Orders a meal but sends back food as it becomes available
  rpc StaggeredOrder (MealRequest) returns (stream MealResponse) {}

  // Orders food continuously and the kitchen returns food continuously
  rpc DimSumOrder (stream MealRequest) returns (stream MealResponse) {}

}

// The request message containing the user's name.
message MealRequest {
  repeated int32 mealIds = 1;
}

// The response message containing the greetings
message MealResponse {
  repeated Meal meals = 1;
}

message Meal {
  int32 id = 1;
  string name = 2; 
  repeated string ingredients = 3;
}
